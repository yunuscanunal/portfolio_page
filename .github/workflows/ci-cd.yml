name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: portfolio_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DB_URL: jdbc:postgresql://localhost:5432/portfolio_db
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Make Maven wrapper executable
        run: chmod +x mvnw

      - name: Build with Maven (run tests)
        run: ./mvnw clean package -DskipTests=false

  build-and-test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Run tests (ignore failures)
        run: npm test -- --watchAll=false
        continue-on-error: true

  build:
    runs-on: ubuntu-latest
    needs: [build-and-test-backend, build-and-test-frontend]
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: portfolio_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
      ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      DB_URL: jdbc:postgresql://localhost:5432/portfolio_db
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Make Maven wrapper executable
        run: chmod +x mvnw

      - name: Build JAR without tests
        run: ./mvnw clean package -DskipTests=true

      - name: Run JAR
        run: java -jar target/*.jar
