name: CI & Deploy Pipeline

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  # --- TEST AŞAMASI ---
  test-backend:
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: ./backend } }
    services:
      postgres:
        image: postgres:13
        env: { POSTGRES_DB: portfolio_db, POSTGRES_USER: postgres, POSTGRES_PASSWORD: postgres }
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DB_URL: jdbc:postgresql://localhost:5432/portfolio_db
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with: { java-version: "17", distribution: "temurin" }
      - run: chmod +x mvnw
      - run: ./mvnw clean package -DskipTests=false

  test-frontend:
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: ./frontend } }
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with: { node-version: "18" }
      - run: npm ci
      - run: npm run build
      - run: npm test -- --watchAll=false
        continue-on-error: true

  # --- BUILD VE PUSH AŞAMASI ---
  build-and-push:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend] # Testler başarılı olursa başlar
    steps:
      - uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/portfolio-backend:latest

      - name: Build and push frontend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/portfolio-frontend:latest

  # --- DEPLOY AŞAMASI ---
  deploy-to-server:
    runs-on: ubuntu-latest
    needs: build-and-push # Build ve push başarılı olursa başlar
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
        
      - name: Add SSH key to known_hosts for security
        run: ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Connect to Server and Deploy
        run: |
          ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} << 'EOF'
            cd /opt/portfolio/portfolio_page 

            echo "=> Pulling latest docker-compose changes..."
            git pull

            echo "=> Pulling latest images from Docker Hub..."
            docker-compose pull

            echo "=> Restarting containers with new images..."
            docker-compose up -d --remove-orphans
            
            echo "=> Pruning old Docker images..."
            docker image prune -af

            echo "Deployment successful!"
          EOF
