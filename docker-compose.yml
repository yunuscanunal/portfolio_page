version: "3.8"

services:
  db:
    image: postgres:15
    container_name: portfolio_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: yunuscanunal/portfolio-backend:latest
    container_name: portfolio_backend
    environment:
      ADMIN_USERNAME: ${ADMIN_USERNAME}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
    #ports:
    #  - "8080:8080"
    depends_on:
      db:
        condition: service_healthy

    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/projects"] # Backend'in proje endpoint'ine istek at
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  frontend:
    build: ./frontend
    container_name: portfolio_frontend
    environment:
      - REACT_APP_API_URL=/
    ports:
      - "80:80"
    depends_on:
      - backend:
        condition: service_healthy
    restart: unless-stopped

volumes:
  db_data:
